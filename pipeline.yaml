resources:
- repo: self

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - docs/*
    - CODEOWNERS
    - .github

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - docs/*
    - CODEOWNERS
    - .github

variables:
  runTests: True

jobs:
- job: Style
  cancelTimeoutInMinutes: 0
  condition: eq(variables.runTests, 'True')
  pool:
    vmImage: ubuntu-20.04
  steps:
    - template: templates/ivy_cache.yml
    - task: AzureCLI@1
      displayName: 'Style Check'
      inputs:
        azureSubscription: 'MMLSpark Build'
        scriptLocation: inlineScript
        inlineScript: 'sbt scalastyle test:scalastyle it:scalastyle'

- job: Publish
  cancelTimeoutInMinutes: 0
  pool:
    vmImage: ubuntu-20.04
  steps:
    - template: templates/ivy_cache_2.yml
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH
    - bash: conda info
    - bash: conda env create -f environment.yaml
      displayName: Create Anaconda environment
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'MMLSpark Build'
        keyVaultName: mmlspark-keys
    - task: MavenAuthenticate@0
      name: mavenAuthPublicPackages
      displayName: Authenticate SynapseML_PublicPackages
      inputs:
        artifactsFeeds: SynapseML_PublicPackages
        mavenServiceConnections: SynapseML_PublicPackages-Feed-Connection
    - bash: |
        source activate mmlspark
        sbt packagePython
        sbt publishBlob publishSigned publishDocs publishR
        sbt genBuildInfo
        echo "##vso[task.uploadsummary]$(pwd)/target/Build.md"
        sbt release
      displayName: Publish Artifacts
      env:
        STORAGE_KEY: $(storage-key)
        NEXUS-UN: $(nexus-un)
        NEXUS-PW: $(nexus-pw)
        PGP-PRIVATE: $(pgp-private)
        PGP-PUBLIC: $(pgp-public)
        PGP-PW: $(pgp-pw)
    - bash: sbt aetherDeploy
      displayName: Publish to Feed
      env:
        ADO-FEED-TOKEN: $(ado-feed-token)
        STORAGE-KEY: $(storage-key)
        PUBLISH-TO-FEED: true
    - bash: sbt publishBadges
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: Publish Badges
      env:
        STORAGE_KEY: $(storage-key)
